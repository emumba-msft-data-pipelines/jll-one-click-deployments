{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "defaultValue": "TeamsNotify",
            "type": "String"
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location for all resources."
            }
        }
    },
    "variables": {
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "msftTeamsConnectionAuth",
            "tags": {
                "Environment": "Customer",
                "AssociatedDataSet": "USAFactsKnownCases"
            },
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "TeamsNotification",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/eastus/managedApis/teams')]"
                }
            }
        },

                {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicAppName')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', 'msftTeamsConnectionAuth')]"
            ],
            "tags": {
                "Environment": "Customer",
                "AssociatedDataSet": "USAFactsKnownCases"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "context": {
                                                    "properties": {
                                                        "condition": {
                                                            "properties": {
                                                                "allOf": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "dimensions": {
                                                                                "items": {
                                                                                    "properties": {
                                                                                        "name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "name",
                                                                                        "value"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "type": "array"
                                                                            },
                                                                            "metricName": {
                                                                                "type": "string"
                                                                            },
                                                                            "metricNamespace": {
                                                                                "type": "string"
                                                                            },
                                                                            "metricValue": {
                                                                                "type": "integer"
                                                                            },
                                                                            "operator": {
                                                                                "type": "string"
                                                                            },
                                                                            "threshold": {
                                                                                "type": "string"
                                                                            },
                                                                            "timeAggregation": {
                                                                                "type": "string"
                                                                            },
                                                                            "webTestName": {}
                                                                        },
                                                                        "required": [
                                                                            "metricName",
                                                                            "metricNamespace",
                                                                            "operator",
                                                                            "threshold",
                                                                            "timeAggregation",
                                                                            "dimensions",
                                                                            "metricValue",
                                                                            "webTestName"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "windowSize": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "conditionType": {
                                                            "type": "string"
                                                        },
                                                        "description": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "portalLink": {
                                                            "type": "string"
                                                        },
                                                        "resourceGroupName": {
                                                            "type": "string"
                                                        },
                                                        "resourceId": {
                                                            "type": "string"
                                                        },
                                                        "resourceName": {
                                                            "type": "string"
                                                        },
                                                        "resourceType": {
                                                            "type": "string"
                                                        },
                                                        "severity": {
                                                            "type": "string"
                                                        },
                                                        "subscriptionId": {
                                                            "type": "string"
                                                        },
                                                        "timestamp": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "properties": {},
                                                "status": {
                                                    "type": "string"
                                                },
                                                "version": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "schemaId": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Switch": {
                            "runAfter": {},
                            "cases": {
                                "Case": {
                                    "case": "ActivityFailedRuns",
                                    "actions": {
                                        "Post_a_message_(V3)": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "body": {
                                                        "content": "<p><strong>Activity Failed Alert<br>\n</strong><br>\n<br>\n<strong>Alert generated by resource</strong>: @{triggerBody()?['data']?['context']?['id']}&nbsp;&nbsp;<br>\n<strong>Alert name</strong>: @{triggerBody()['data']['context']['name']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Description</strong>: @{triggerBody()['data']['context']['description']} &nbsp;&nbsp;<br>\n<strong>ResourceGroup Name</strong>: @{triggerBody()['data']['context']['resourceGroupName']}<br>\n<strong>Alert time</strong>: @{triggerBody()['data']['context']['timestamp']}&nbsp;&nbsp;&nbsp;&nbsp;<br>\n<strong>Resource Name</strong>: @{triggerBody()['data']['context']['resourceName']} &nbsp;&nbsp;<br>\n<strong>Resource Type</strong>: @{triggerBody()['data']['context']['resourceType']} &nbsp;<br>\n<strong>Failed Activity Name</strong>: @{triggerBody().data.context.condition.allOf[0].dimensions[4]['value']}&nbsp;&nbsp;<br>\n<strong>Failed Activity Type</strong>: @{triggerBody().data.context.condition.allOf[0].dimensions[1]['value']}<br>\n<strong>Failure Type</strong>: @{triggerBody().data.context.condition.allOf[0].dimensions[2]['value']}&nbsp;</p>",
                                                        "contentType": "html"
                                                    }
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v3/beta/teams/@{encodeURIComponent('0f83d323-c7b7-4f4f-88c4-feebc9fbab23')}/channels/@{encodeURIComponent('19:0ef995481b924089b81e7c1bb21a2ab7@thread.tacv2')}/messages"
                                            }
                                        }
                                    }
                                },
                                "Case_2": {
                                    "case": "PipelineFailedRuns",
                                    "actions": {
                                        "Post_a_message_(V3)_2": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "body": {
                                                        "content": "<p><strong>Pipeline Failed Alert !<br>\n</strong><br>\n<br>\n<strong>Alert generated by resource</strong>: @{triggerBody()?['data']?['context']?['id']}<br>\n<strong>Alert name</strong>: @{triggerBody()['data']['context']['name']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Description</strong>: @{triggerBody()['data']['context']['description']} &nbsp;&nbsp;<br>\n<strong>Alert time</strong>: @{triggerBody()['data']['context']['timestamp']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Resource Name</strong>: @{triggerBody()['data']['context']['resourceName']}<br>\n<strong>ResourceGroup Name</strong>: @{triggerBody()['data']['context']['resourceGroupName']} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>\n<strong>Resource Type</strong>: @{triggerBody()['data']['context']['resourceType']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Failed Pipeline Name</strong>: @{triggerBody().data.context.condition.allOf[0].dimensions[1]['value']}<br>\n<strong>Failure Type</strong>: @{triggerBody().data.context.condition.allOf[0].dimensions[2]['value']}</p>",
                                                        "contentType": "html"
                                                    }
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v3/beta/teams/@{encodeURIComponent('0f83d323-c7b7-4f4f-88c4-feebc9fbab23')}/channels/@{encodeURIComponent('19:0ef995481b924089b81e7c1bb21a2ab7@thread.tacv2')}/messages"
                                            }
                                        }
                                    }
                                },
                                "Case_3": {
                                    "case": "ActivityCancelledRuns",
                                    "actions": {
                                        "Post_a_message_(V3)_3": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "body": {
                                                        "content": "<p><strong>Activity Cancellation Alert !<br>\n</strong><br>\n<br>\n<strong>Alert generated by resource</strong>: @{triggerBody()?['data']?['context']?['id']}<br>\n<strong>Alert name</strong>: @{triggerBody()['data']['context']['name']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Description</strong>: @{triggerBody()['data']['context']['description']} &nbsp;&nbsp;<br>\n<strong>Alert time</strong>: @{triggerBody()['data']['context']['timestamp']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Resource Group Name</strong>: @{triggerBody()['data']['context']['resourceGroupName']}<br>\n<strong>Resource Name</strong>: @{triggerBody()['data']['context']['resourceName']} &nbsp;&nbsp;<br>\n<strong>Resource Type</strong>: @{triggerBody()['data']['context']['resourceType']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Cancelled Activity Name</strong>: @{triggerBody().data.context.condition.allOf[0].dimensions[2]['value']}<br>\n<strong>Cancelled Activity Type</strong>: @{triggerBody().data.context.condition.allOf[0].dimensions[1]['value']}</p>",
                                                        "contentType": "html"
                                                    }
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v3/beta/teams/@{encodeURIComponent('0f83d323-c7b7-4f4f-88c4-feebc9fbab23')}/channels/@{encodeURIComponent('19:0ef995481b924089b81e7c1bb21a2ab7@thread.tacv2')}/messages"
                                            }
                                        }
                                    }
                                },
                                "Case_4": {
                                    "case": "PipelineCancelledRuns",
                                    "actions": {
                                        "Post_a_message_(V3)_4": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "body": {
                                                        "content": "<p><strong>Pipeline Cancellation Alert !<br>\n</strong>&nbsp;<br>\n<br>\n<strong>Alert generated by resource</strong>: @{triggerBody()?['data']?['context']?['id']}<br>\n<strong>Alert name</strong>: @{triggerBody()['data']['context']['name']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Description</strong>: @{triggerBody()['data']['context']['description']} &nbsp;&nbsp;<br>\n<strong>Alert time</strong>: @{triggerBody()['data']['context']['timestamp']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Resource Group Name</strong>: @{triggerBody()['data']['context']['resourceGroupName']}<br>\n<strong>Resource Name</strong>: @{triggerBody()['data']['context']['resourceName']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Resource Type</strong>: @{triggerBody()['data']['context']['resourceType']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Cancelled Pipeline</strong>: @{triggerBody().data.context.condition.allOf[0].dimensions[1]['value']}</p>",
                                                        "contentType": "html"
                                                    }
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v3/beta/teams/@{encodeURIComponent('0f83d323-c7b7-4f4f-88c4-feebc9fbab23')}/channels/@{encodeURIComponent('19:0ef995481b924089b81e7c1bb21a2ab7@thread.tacv2')}/messages"
                                            }
                                        }
                                    }
                                },
                                "Case_5": {
                                    "case": "PipelineSucceededRuns",
                                    "actions": {
                                        "Post_a_message_(V3)_5": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "body": {
                                                        "content": "<p><strong>Pipeline Succeeded Alert !<br>\n</strong><br>\n<br>\n<strong>Alert generated by resource</strong>: @{triggerBody()?['data']?['context']?['id']}<br>\n<strong>Alert Name</strong>: @{triggerBody()['data']['context']['name']}<br>\n<strong>Alert Description</strong>:@{triggerBody()['data']['context']['description']}<br>\n<strong>Time</strong>:@{triggerBody()['data']['context']['timestamp']}<br>\n<strong>Resource Group</strong>:@{triggerBody()['data']['context']['resourceGroupName']}<br>\n<strong>Resource</strong> : @{triggerBody()['data']['context']['resourceName']}<br>\n<strong>Resource Type</strong>: @{triggerBody()['data']['context']['resourceType']}</p>",
                                                        "contentType": "html"
                                                    }
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v3/beta/teams/@{encodeURIComponent('0f83d323-c7b7-4f4f-88c4-feebc9fbab23')}/channels/@{encodeURIComponent('19:0ef995481b924089b81e7c1bb21a2ab7@thread.tacv2')}/messages"
                                            }
                                        }
                                    }
                                },
                                "Case_6": {
                                    "case": "TriggerFailedRuns",
                                    "actions": {
                                        "Post_a_message_(V3)_6": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "body": {
                                                        "content": "<p><strong>Pipeline Trigger Failed Alert !<br>\n</strong><br>\n<br>\n<strong>Alert generated by resource</strong>: @{triggerBody()?['data']?['context']?['id']}&nbsp;&nbsp;<br>\n<strong>Alert name</strong>: @{triggerBody()['data']['context']['name']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Description</strong>: @{triggerBody()['data']['context']['description']} &nbsp;&nbsp;<br>\n<strong>Alert time</strong>: @{triggerBody()['data']['context']['timestamp']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Resource Name</strong>: @{triggerBody()['data']['context']['resourceName']}<br>\n<strong>ResourceGroup Name</strong>: @{triggerBody()['data']['context']['resourceGroupName']} &nbsp;&nbsp;&nbsp;&nbsp;<br>\n<strong>Resource Type</strong>: @{triggerBody()['data']['context']['resourceType']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Failed Pipeline Name</strong>: @{triggerBody().data.context.condition.allOf[0].dimensions[1]['value']}<br>\n<strong>Failure Type</strong>: @{triggerBody().data.context.condition.allOf[0].dimensions[2]['value']}</p>",
                                                        "contentType": "html"
                                                    }
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v3/beta/teams/@{encodeURIComponent('0f83d323-c7b7-4f4f-88c4-feebc9fbab23')}/channels/@{encodeURIComponent('19:0ef995481b924089b81e7c1bb21a2ab7@thread.tacv2')}/messages"
                                            }
                                        }
                                    }
                                },
                                "Case_7": {
                                    "case": "TriggerCancelledRuns",
                                    "actions": {
                                        "Post_a_message_(V3)_7": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "body": {
                                                        "content": "<p><strong>Pipeline Triggered Cancellation Alert !<br>\n</strong><br>\n<br>\n<strong>Alert generated by resource</strong>: @{triggerBody()?['data']?['context']?['id']}&nbsp;<br>\n<strong>Alert name</strong>: @{triggerBody()['data']['context']['name']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Description</strong>: @{triggerBody()['data']['context']['description']} &nbsp;&nbsp;<br>\n<strong>Alert time</strong>: @{triggerBody()['data']['context']['timestamp']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Resource Group Name</strong>: @{triggerBody()['data']['context']['resourceGroupName']}<br>\n<strong>Resource Name</strong>: @{triggerBody()['data']['context']['resourceName']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Resource Type</strong>: @{triggerBody()['data']['context']['resourceType']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Cancelled Pipeline</strong>: @{triggerBody().data.context.condition.allOf[0].dimensions[1]['value']}</p>",
                                                        "contentType": "html"
                                                    }
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v3/beta/teams/@{encodeURIComponent('0f83d323-c7b7-4f4f-88c4-feebc9fbab23')}/channels/@{encodeURIComponent('19:0ef995481b924089b81e7c1bb21a2ab7@thread.tacv2')}/messages"
                                            }
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {}
                            },
                            "expression": "@triggerBody().data.context.condition.allOf[0].metricName",
                            "type": "Switch"
                        },
                        "Switch_2": {
                            "runAfter": {},
                            "cases": {
                                "Case": {
                                    "case": "SourceCurrentSchemaWithMoreColumnsAlert",
                                    "actions": {
                                        "Post_a_message_(V3)_8": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "body": {
                                                        "content": "<p><br>\n<strong>Current schema has more columns than previous schema alert !<br>\n</strong><br>\n<br>\n<br>\n<strong>Alert generated by resource</strong>: @{triggerBody()?['data']?['context']?['id']}<br>\n<strong>Alert name</strong>: @{triggerBody()['data']['context']['name']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Alert Description</strong>: @{triggerBody()['data']['context']['description']} &nbsp;&nbsp;<br>\n<strong>ResourceGroup Name</strong>: @{triggerBody()['data']['context']['resourceGroupName']}<br>\n<strong>Alert time</strong>: @{triggerBody()['data']['context']['timestamp']}&nbsp;&nbsp;&nbsp;&nbsp;<br>\n<strong>Resource Name</strong>: @{triggerBody()['data']['context']['resourceName']}</p>",
                                                        "contentType": "html"
                                                    }
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v3/beta/teams/@{encodeURIComponent('0f83d323-c7b7-4f4f-88c4-feebc9fbab23')}/channels/@{encodeURIComponent('19:0ef995481b924089b81e7c1bb21a2ab7@thread.tacv2')}/messages"
                                            }
                                        }
                                    }
                                },
                                "Case_2": {
                                    "case": "SourceCurrentSchemaWithLessColumnsAlert",
                                    "actions": {
                                        "Post_a_message_(V3)_9": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "body": {
                                                        "content": "<p><strong>Current schema has less columns than previous schema Alert<br>\n</strong><br>\n<br>\n<strong>Alert generated by resource</strong>: &nbsp;@{triggerBody()?['data']?['context']?['id']}<br>\n<strong>Alert name</strong>: &nbsp;@{triggerBody()['data']['context']['name']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Alert Description</strong>: &nbsp;@{triggerBody()['data']['context']['description']} &nbsp;&nbsp;<br>\n<strong>ResourceGroup Name</strong>: &nbsp;@{triggerBody()['data']['context']['resourceGroupName']}<br>\n<strong>Alert time</strong>: &nbsp;@{triggerBody()['data']['context']['timestamp']}&nbsp;&nbsp;&nbsp;&nbsp;<br>\n<strong>Resource Name</strong>: @{triggerBody()['data']['context']['resourceName']}</p>",
                                                        "contentType": "html"
                                                    }
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v3/beta/teams/@{encodeURIComponent('0f83d323-c7b7-4f4f-88c4-feebc9fbab23')}/channels/@{encodeURIComponent('19:0ef995481b924089b81e7c1bb21a2ab7@thread.tacv2')}/messages"
                                            }
                                        }
                                    }
                                },
                                "Case_3": {
                                    "case": "SourceCurrentSchemaWithSameNumberOfColumnsButDifferentNamesOrArrangementAlert",
                                    "actions": {
                                        "Post_a_message_(V3)_10": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "body": {
                                                        "content": "<p><strong>Current schemas has same number of columns but their arrangement is different alert !</strong><br>\n<br>\n<br>\n<strong>Alert generated by resource</strong>: @{triggerBody()?['data']?['context']?['id']}<br>\n<strong>Alert name</strong>: @{triggerBody()['data']['context']['name']} &nbsp;&nbsp;&nbsp;<br>\n<strong>Alert Description</strong>: @{triggerBody()['data']['context']['description']} &nbsp;&nbsp;<br>\n<strong>ResourceGroup Name</strong>: @{triggerBody()['data']['context']['resourceGroupName']}<br>\n<strong>Alert time</strong>: @{triggerBody()['data']['context']['timestamp']}&nbsp;&nbsp;&nbsp;&nbsp;<br>\n<strong>Resource Name</strong>: @{triggerBody()['data']['context']['resourceName']}</p>",
                                                        "contentType": "html"
                                                    }
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v3/beta/teams/@{encodeURIComponent('0f83d323-c7b7-4f4f-88c4-feebc9fbab23')}/channels/@{encodeURIComponent('19:0ef995481b924089b81e7c1bb21a2ab7@thread.tacv2')}/messages"
                                            }
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {}
                            },
                            "expression": "@triggerBody()?['data']?['context']?['name']",
                            "type": "Switch"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "teams": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', 'msftTeamsConnectionAuth')]",
                                "connectionName": "teams-connection",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/eastus/managedApis/teams')]"
                            }
                        }
                    }
                }
            }
        }
 
    ],
    "outputs": {
        "WebHookURI": {
          "type": "string",
          "value": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', parameters('logicAppName'), 'manual'), '2019-05-01').value]"
        }
      }
}
